package com.ohgiraffers.section01.array;

public class Application01 {

    public static void main(String[] args) {

        /* 수업목표. 배열에 대해 이해하고 배열의 사용 목적을 이해할 수 있다. */
        /* 필기.
        *   배열이란?
        *   동일한 자료형의 묶음(연속된 메모리 공간에 값을 저장하고 사용하기 위한 용도)이다.
        *   배열은 heap 영역에 new 연산자를 이용하여 할당한다.
        *  */

        /* 필기.
        *   배열의 사용 이유
        *   만약 배열을 사용하지 않는다면 변수를 여러 개 사용해야 한다.
        *   1. 연속된 메모리 공간으로 관리할 수 없다.
        *   2. 반복문을 이용한 연속 처리가 불가능하다.
        *  */

        /* 목차. 배열의 선언 및 할당 */
        int[] arr = new int[5];

        System.out.println("arr = " + arr);

        /* 필기. 하나의 이름으로 관리되는 연속된 메모리 공간이고, 공간마다 찾아갈 수 있는 번호(인덱스) 를 이용해 접근한다. */
        arr[0] = 10;
        arr[1] = 20;
        arr[2] = 30;
        arr[3] = 40;
        arr[4] = 50;


        /* 필기.
        *   배열의 사용 방법
        *   1. 배열의 선언
        *   2. 배열의 할당
        *   3. 배열의 인덱스 공간에 값 대입
        *  */

        /* 목차. 1. 배열의 선언 */

        /* 필기.
        *   자료형[] 변수명;
        *   자료형 변수명[];
        *   이런 식으로 선언을 할 수 있다.
        *  */
        int num2;
        num2 = 10;

        /* 필기. 선언은 stack 에 배열의 주소를 보관할 수 있는 공간을 만드는 것이다. */
        int[] num;
        num = new int[5];

        char[] cnum;
        int num1[];

        /* 필기.
        *   선언한 레퍼런스변수에 배열을 할당하여 대입할 수 있다.
        *   new 연산자는 heap 영역에 공간을 할당하고 발생한 주소값을 반환하는 연산자이다.
        *   발생한 주소를 래퍼런스 변수(참조형 변수)에 저장하고 이것을 참조하여
        *   사용하기 때문에 참조자료형(reference type) 이라고 한다.
        *  */

        /* 필기. 배열을 할당할 시에는 반드시 배열의 크기를 지정해 주어야 한다. */
        int[] iarr;
//        iarr = new int[];   // 크기를 지정해 주어야 한다.
        iarr = new int[5];

        /* 필기. 위의 선언과 할당을 동시에 할 수 있다. */
        int[] iarr2 = new int[5];

    }

}
